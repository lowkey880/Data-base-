CREATE DATABASE advanced_lab;

CREATE TABLE employees(	
	emp_id SERIAL PRIMARY KEY,
	first_name VARCHAR(50), 
	last_name VARCHAR(50),
	department  VARCHAR(50),
	salary INT, 
	hire_date DATE,
	status VARCHAR(20) DEFAULT 'Active'
);

CREATE TABLE departments (
    dept_id SERIAL PRIMARY KEY,
    dept_name VARCHAR(50),
    budget INT,
    manager_id INT,
    CONSTRAINT fk_manager FOREIGN KEY (manager_id) REFERENCES employees(emp_id)
);

CREATE TABLE projects (
    project_id SERIAL PRIMARY KEY,
    project_name VARCHAR(100),
    dept_id INT,
    start_date DATE,
    end_date DATE,
    budget INT,
    CONSTRAINT fk_dept FOREIGN KEY (dept_id) REFERENCES departments(dept_id)
);

#2

INSERT INTO employees (emp_id, first_name, last_name, department)
VALUES (DEFAULT, 'Timur', 'Kim', 'IT');

INSERT INTO employees (first_name, last_name, department, salary, status)
VALUES ('Vladislav', 'Lizko', 'IT', DEFAULT, DEFAULT);


INSERT INTO departments (dept_name, budget, manager_id)
VALUES 
  ('Finance',   100000, NULL),
  ('Marketing', 150000, NULL),
  ('Engineering', 200000, NULL);

INSERT INTO employees(first_name, last_name, department, hire_date, salary, status)
VALUES ('Alice', 'Brown', 'HR', current_date, CAST(ROUND(50000 * 1.1) AS INT),DEFAULT);

CREATE TEMP TABLE temp_employees (LIKE employees INCLUDING ALL);
INSERT INTO temp_employees
SELECT *
FROM employees
WHERE department = 'IT';

UPDATE employees
SET salary = salary * 1.10;

UPDATE employees
SET status = 'Senior'
WHERE salary > 60000
  AND hire_date < '2020-01-01';

UPDATE employees
SET department = CASE
WHEN salary > 80000 THEN 'Management'
WHEN salary BETWEEN 50000 AND 80000 THEN 'Senior'
ELSE 'Junior'
END;

ALTER TABLE employees
ALTER COLUMN department SET DEFAULT 'General';

UPDATE employees
SET department = DEFAULT
WHERE status = 'Inactive';

UPDATE departments d
SET budget = (
    SELECT AVG(e.salary) * 1.2
    FROM employees e
    WHERE e.department = d.dept_name
);


UPDATE employees
SET salary = salary * 1.15,
	status ='Promoted'
WHERE department = 'Sales';


DELETE FROM employees
WHERE status = 'Terminated';

DELETE FROM employees 
WHERE salary < 40000 AND
	  hire_date > '2023-01-01' AND
	  department IS NULL;


DELETE FROM departments
WHERE dept_name NOT IN (
    SELECT DISTINCT department
    FROM employees
    WHERE department IS NOT NULL
);


DELETE FROM projects
WHERE end_date < '2023-01-01'
RETURNING *;

INSERT INTO employees (first_name, last_name, department, salary, hire_date, status)
VALUES ('Nuller', 'Test', NULL, NULL, CURRENT_DATE, 'Active');


UPDATE employees
SET department = 'Unassigned'
WHERE department IS NULL;

DELETE FROM employees
WHERE salary IS NULL OR
	  department IS NULL;

INSERT INTO employees (first_name, last_name, department, salary, hire_date)
VALUES ('John', 'Doe', 'IT', 60000, CURRENT_DATE)
RETURNING emp_id, (first_name || ' ' || last_name) AS full_name;

UPDATE employees
SET salary = salary + 50000
RETURNING emp_id, (salary - 5000) AS old_salary, salary AS new_salary;

DELETE FROM employees
WHERE hire_date < '2020-01-01'
RETURNING *;

INSERT INTO employees (first_name, last_name, department, salary, hire_date, status)
SELECT 'Alice', 'Smith', 'HR', 45000, CURRENT_DATE, 'Active'
WHERE NOT EXISTS (
    SELECT 1
    FROM employees
    WHERE first_name = 'Alice'
      AND last_name  = 'Smith'
);

UPDATE employees e
SET salary = salary * (
    CASE
        WHEN (SELECT d.budget 
              FROM departments d 
              WHERE d.dept_name = e.department) > 100000
        THEN 1.10
        ELSE 1.05
    END
);

INSERT INTO employees (first_name, last_name, department, salary, hire_date, status)
VALUES
  ('Emp1', 'Test', 'Sales', 40000, CURRENT_DATE, 'Active'),
  ('Emp2', 'Test', 'Sales', 42000, CURRENT_DATE, 'Active'),
  ('Emp3', 'Test', 'Sales', 45000, CURRENT_DATE, 'Active'),
  ('Emp4', 'Test', 'Sales', 46000, CURRENT_DATE, 'Active'),
  ('Emp5', 'Test', 'Sales', 48000, CURRENT_DATE, 'Active');

UPDATE employees
SET salary = salary * 1.10
WHERE department = 'Sales';

CREATE TABLE employee_archive (LIKE employees INCLUDING ALL);

INSERT INTO employee_archive
SELECT * FROM employees
WHERE status = 'Inactive';

DELETE FROM employees
WHERE status = 'Inactive';

UPDATE projects p
SET end_date = end_date + INTERVAL '30 days'
WHERE budget > 50000
  AND (
    SELECT COUNT(*) 
    FROM employees e
    WHERE e.department = (
        SELECT d.dept_name 
        FROM departments d 
        WHERE d.dept_id = p.dept_id
    )
  ) > 3;